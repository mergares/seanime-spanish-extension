{
  "id": "local-animeflv-provider",
  "name": "Local AnimeFLV Provider",
  "description": "Stream anime from a locally hosted jimov API using the AnimeFLV provider with search.",
  "manifestURI": "https://raw.githubusercontent.com/mergares/seanime-spanish-extension/refs/heads/main/manifest.json",
  "version": "1.0.0",
  "author": "User",
  "type": "onlinestream-provider",
  "language": "javascript",
  "lang": "en",
  "payload": "class Provider {\\n  constructor() { this.api = \\\"http://100.91.179.28:3003/anime/flv\\\"; }\\n  getSettings() { return { episodeServers: [\\\"default\\\"], supportsDub: false }; }\\n  async search(opts) { const res = await fetch(`${this.api}/search/${encodeURIComponent(opts.query)}`); if (!res.ok) return []; return await res.json(); }\\n  async findEpisodes(id) { const res = await fetch(`${this.api}/name/${id}`); if (!res.ok) return []; const data = await res.json(); return data.episodes.map(e => ({ id: e.number.toString(), number: e.number, url: e.url, title: e.name })); }\\n  async findEpisodeServer(ep, server) { const res = await fetch(`${this.api}/episode/${ep.number}`); if (!res.ok) throw new Error(res.statusText); const data = await res.json(); const s = data.servers.find(x => x.name === server) || data.servers[0]; return { server: s.name, headers: {}, videoSources: [{ url: s.file_url, type: \\\"m3u8\\\", quality: \\\"1080p\\\", subtitles: [] }] }; }\\n}"
}
